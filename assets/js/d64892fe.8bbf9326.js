"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[3481],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},32422:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));n(44996);const o={id:"07-dependencies",title:"Dependencies"},i=void 0,l={unversionedId:"tutorials/todo-app/07-dependencies",id:"tutorials/todo-app/07-dependencies",title:"Dependencies",description:"What is a Todo app without some clocks!? Well, still a Todo app, but certainly not as fun as one with clocks!",source:"@site/docs/tutorials/todo-app/07-dependencies.md",sourceDirName:"tutorials/todo-app",slug:"/tutorials/todo-app/07-dependencies",permalink:"/docs/tutorials/todo-app/07-dependencies",draft:!1,editUrl:"https://github.com/wasp-lang/wasp/edit/main/web/docs/tutorials/todo-app/07-dependencies.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{id:"07-dependencies",title:"Dependencies"},sidebar:"docs",previous:{title:"Authentication",permalink:"/docs/tutorials/todo-app/06-auth"},next:{title:"The End",permalink:"/docs/tutorials/todo-app/08-the-end"}},s={},c=[],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"What is a Todo app without some clocks!? Well, still a Todo app, but certainly not as fun as one with clocks!"),(0,a.kt)("p",null,"So, let's add a couple of clocks to our app, to help us track time while we perform our tasks (and to demonstrate the ",(0,a.kt)("inlineCode",{parentName:"p"},"app.dependencies")," feature)."),(0,a.kt)("p",null,"For this, we will use the ",(0,a.kt)("inlineCode",{parentName:"p"},"react-clock")," library from NPM. We can add it to our project as a ",(0,a.kt)("a",{parentName:"p",href:"/docs/language/features#dependencies"},"dependency")," like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c",metastring:'{4-6} title="main.wasp"',"{4-6}":!0,title:'"main.wasp"'},'app TodoApp {\n  // ...\n\n  dependencies: [\n    ("react-clock", "3.0.0")\n  ]\n}\n')),(0,a.kt)("p",null,"Run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"wasp start\n")),(0,a.kt)("p",null,"to have Wasp download and install the new dependency. If ",(0,a.kt)("inlineCode",{parentName:"p"},"wasp start")," is already running, Wasp will detect the dependency change, and restart automatically."),(0,a.kt)("p",null,"Next, let's create a new component ",(0,a.kt)("inlineCode",{parentName:"p"},"Clocks")," where we can play with the clocks."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/client/Clocks.jsx"',title:'"src/client/Clocks.jsx"'},"import { useEffect, useState } from 'react'\nimport Clock from 'react-clock'\nimport 'react-clock/dist/Clock.css'\n\nconst Clocks = () => {\n  const [time, setTime] = useState(new Date())\n\n  useEffect(() => {\n    const interval = setInterval(() => setTime(new Date()), 1000)\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Clock value={time} />\n      <Clock value={new Date(time.getTime() + 60 * 60000)} />\n    </div>\n  )\n}\n\nexport default Clocks\n")),(0,a.kt)("p",null,"And let's import it into our main React component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'{2,11} title="src/client/MainPage.jsx"',"{2,11}":!0,title:'"src/client/MainPage.jsx"'},"// ...\nimport Clocks from './Clocks'\n\nconst MainPage = () => {\n  // ...\n\n  return (\n    <div>\n      // ...\n\n      <div> <Clocks /> </div>\n\n      // ...\n    </div>\n  )\n}\n// ...\n")),(0,a.kt)("p",null,"As you can see, importing other files from ",(0,a.kt)("inlineCode",{parentName:"p"},"src/client")," is completely normal, just use the relative path. The same goes for all files under ",(0,a.kt)("inlineCode",{parentName:"p"},"src/server"),". You can't (and shouldn't) import files from ",(0,a.kt)("inlineCode",{parentName:"p"},"src/client")," into ",(0,a.kt)("inlineCode",{parentName:"p"},"src/server")," and vice versa. If you want to share code between the two runtimes, you can use a relative import to import anything from ",(0,a.kt)("inlineCode",{parentName:"p"},"src/shared")," into both the client code and the server code. The ",(0,a.kt)("inlineCode",{parentName:"p"},"src/shared")," is especially handy for full-stack type definitions when using TypeScript."),(0,a.kt)("p",null,"That is it! We added a dependency and used it in our project."))}u.isMDXComponent=!0}}]);