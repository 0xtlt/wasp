(self.webpackChunkweb=self.webpackChunkweb||[]).push([[9906],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return w}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),f=c(r),w=o,b=f["".concat(l,".").concat(w)]||f[w]||p[w]||a;return r?n.createElement(b,i(i({ref:t},s),{},{components:r})):n.createElement(b,i({ref:t},s))}));function w(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:o,i[1]=u;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3441:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return s},default:function(){return f}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),i=["components"],u={title:"Hello Wasp!",author:"Martin Sosic",author_title:"Co-founder @ Wasp",author_url:"https://github.com/martinsos",tags:["wasp"]},l=void 0,c={permalink:"/wasp/blog/2019/09/01/hello-wasp",editUrl:"https://github.com/wasp-lang/wasp/edit/master/web/blog/blog/2019-09-01-hello-wasp.md",source:"@site/blog/2019-09-01-hello-wasp.md",title:"Hello Wasp!",description:"About a year or so ago, brother and I started discussing how awesome it would be to have a programming language that would understand what \u201cweb app\u201d means. Such language would, on one hand, serve as an expressive specification of the web app, while on the other hand, it would take care of \u201cboring\u201d work for us, while we could focus on the business logic specific for our web app.",date:"2019-09-01T00:00:00.000Z",formattedDate:"September 1, 2019",tags:[{label:"wasp",permalink:"/wasp/blog/tags/wasp"}],readingTime:5.335,truncated:!0,prevItem:{title:"Journey to YCombinator",permalink:"/wasp/blog/2021/02/23/journey-to-ycombinator"}},s=[],p={toc:s};function f(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"About a year or so ago, brother and I started discussing how awesome it would be to have a programming language that would understand what \u201cweb app\u201d means. Such language would, on one hand, serve as an expressive specification of the web app, while on the other hand, it would take care of \u201cboring\u201d work for us, while we could focus on the business logic specific for our web app."),(0,a.kt)("p",null,"Step by step, the idea has started to take a more concrete shape, and Wasp (Web Application SPecification language) came to life! While still very early, we are writing this blog post to explain why are we building Wasp, what is the current status and what the future may hold."))}f.isMDXComponent=!0}}]);