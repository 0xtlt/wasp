(self.webpackChunkweb=self.webpackChunkweb||[]).push([[7382],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(o,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(f,s(s({ref:t},l),{},{components:n})):r.createElement(f,s({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=d;var u={};for(var o in t)hasOwnProperty.call(t,o)&&(u[o]=t[o]);u.originalType=e,u.mdxType="string"==typeof e?e:a,s[1]=u;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3919:function(e,t,n){"use strict";function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,{b:function(){return r},Z:function(){return a}})},4996:function(e,t,n){"use strict";n.d(t,{C:function(){return i},Z:function(){return s}});var r=n(2263),a=n(3919);function i(){var e=(0,r.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var i=void 0===r?{}:r,s=i.forcePrependBaseUrl,u=void 0!==s&&s,o=i.absolute,c=void 0!==o&&o;if(!n)return n;if(n.startsWith("#"))return n;if((0,a.b)(n))return n;if(u)return t+n;var l=n.startsWith(t)?n:t+n.replace(/^\//,"");return c?e+l:l}(i,n,e,t)}}}function s(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},4318:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return o},metadata:function(){return c},toc:function(){return l},default:function(){return d}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),s=(n(4996),["components"]),u={id:"04-updating-main-page-js-file",title:"Updating MainPage.js file"},o=void 0,c={unversionedId:"tutorials/dev-excuses-app/04-updating-main-page-js-file",id:"tutorials/dev-excuses-app/04-updating-main-page-js-file",isDocsHomePage:!1,title:"Updating MainPage.js file",description:"This is the most complex part, but it really comes down to mostly writing React. To make our life easier - let\u2019s erase everything we had in the MainPage.js file and substitute it with our new UI markup.",source:"@site/docs/tutorials/dev-excuses-app/04-updating-main-page-js-file.md",sourceDirName:"tutorials/dev-excuses-app",slug:"/tutorials/dev-excuses-app/04-updating-main-page-js-file",permalink:"/docs/tutorials/dev-excuses-app/04-updating-main-page-js-file",editUrl:"https://github.com/wasp-lang/wasp/edit/main/web/docs/tutorials/dev-excuses-app/04-updating-main-page-js-file.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"04-updating-main-page-js-file",title:"Updating MainPage.js file"},sidebar:"docs",previous:{title:"Adding operations",permalink:"/docs/tutorials/dev-excuses-app/03-adding-operations"},next:{title:"Perform migration and run the app",permalink:"/docs/tutorials/dev-excuses-app/05-perform-migration-and-run"}},l=[],p={toc:l};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This is the most complex part, but it really comes down to mostly writing React. To make our life easier - let\u2019s erase everything we had in the ",(0,i.kt)("inlineCode",{parentName:"p"},"MainPage.js")," file and substitute it with our new UI markup."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title=".../ext/MainPage.js | Updating the UI"',title:'".../ext/MainPage.js',"|":!0,Updating:!0,the:!0,'UI"':!0},"import React, { useState } from 'react'\nimport { useQuery } from '@wasp/queries'\nimport getExcuse from '@wasp/queries/getExcuse'\nimport getAllSavedExcuses from '@wasp/queries/getAllSavedExcuses'\nimport saveExcuse from '@wasp/actions/saveExcuse'\n\nconst MainPage = () => {\n  const [currentExcuse, setCurrentExcuse] = useState({ text: \"\" })\n  const { data: excuses } = useQuery(getAllSavedExcuses)\n\n  const handleGetExcuse = async () => {\n    try {\n      setCurrentExcuse(await getExcuse())\n    } catch (err) {\n      window.alert('Error while getting the excuse: ' + err.message)\n    }\n  }\n\n  const handleSaveExcuse = async () => {\n    if (currentExcuse.text) {\n      try {\n        await saveExcuse(currentExcuse)\n      } catch (err) {\n        window.alert('Error while saving the excuse: ' + err.message)\n      }\n    }\n  }\n\n  return (\n    <div className=\"grid grid-cols-2 text-3xl\">\n      <div>\n          <button onClick={handleGetExcuse} className=\"mx-2 my-1 p-2 bg-blue-600 hover:bg-blue-400 text-white rounded\"> Get excuse </button>\n          <button onClick={handleSaveExcuse} className=\"mx-2 my-1 p-2 bg-blue-600 hover:bg-blue-400 text-white rounded\"> Save excuse </button>\n        <Excuse excuse={currentExcuse} />\n      </div>\n      <div>\n        <div className=\"px-6 py-2 bg-blue-600 text-white\"> Saved excuses: </div>\n        {excuses && <ExcuseList excuses={excuses} />}\n      </div>\n    </div>\n  )\n}\n\nconst ExcuseList = (props) => { \n  return props.excuses?.length ?  props.excuses.map((excuse, idx) => <Excuse excuse={excuse} key={idx} />) : 'No saved excuses'\n}\n\nconst Excuse = ({ excuse }) => {\n  return (\n    <div className=\"px-6 py-2\">\n      {excuse.text}\n    </div>\n  )\n}\n\nexport default MainPage\n")),(0,i.kt)("p",null,"Our page consists of three components: ",(0,i.kt)("inlineCode",{parentName:"p"},"MainPage"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ExcuseList"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"Excuse"),". It may seem at first that this file is pretty complex, but let's take a closer look: "),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Excuse")," is just a div with an excuse text, ",(0,i.kt)("inlineCode",{parentName:"p"},"ExcuseList")," checks if there are any excuses. If the list is empty \u2013 show a message ",(0,i.kt)("inlineCode",{parentName:"p"},"No saved excuses"),". In other case \u2013 excuses will be displayed. "),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"MainPage")," contains info about the current excuses and the list of already saved excuses. Two button click handlers are ",(0,i.kt)("inlineCode",{parentName:"p"},"handleGetExcuse")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"handleSaveExcuse"),". Plus, the markup itself with some Tailwind flavor."))}d.isMDXComponent=!0}}]);