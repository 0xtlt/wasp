"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[3740],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(n),g=i,d=m["".concat(u,".").concat(g)]||m[g]||c[g]||a;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1673:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>s});var r=n(87462),i=(n(67294),n(3905)),a=n(44996);const o={title:"GitHub Integrations"},l="GitHub Integrations",u={unversionedId:"integrations/github",id:"integrations/github",title:"GitHub Integrations",description:"GitHub Auth",source:"@site/docs/integrations/github.md",sourceDirName:"integrations",slug:"/integrations/github",permalink:"/docs/integrations/github",draft:!1,editUrl:"https://github.com/wasp-lang/wasp/edit/main/web/docs/integrations/github.md",tags:[],version:"current",frontMatter:{title:"GitHub Integrations"},sidebar:"docs",previous:{title:"Examples",permalink:"/docs/examples"},next:{title:"Google Integrations",permalink:"/docs/integrations/google"}},p={},s=[{value:"GitHub Auth",id:"github-auth",level:2}],c={toc:s};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"github-integrations"},"GitHub Integrations"),(0,i.kt)("h2",{id:"github-auth"},"GitHub Auth"),(0,i.kt)("p",null,"To use GitHub as an authentication method (covered ",(0,i.kt)("a",{parentName:"p",href:"/docs/language/features#github"},"here"),"), you'll first need to create a GitHub OAuth App and provide Wasp with your client key and secret. Here is how to do so:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Log into your GitHub account and navigate to: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/settings/developers"},"https://github.com/settings/developers"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},'Select "New OAuth App"')),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Supply required information"),(0,i.kt)("img",{alt:"GitHub Applications Screenshot",src:(0,a.Z)("img/integrations-github-1.png"),width:"400px"}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'For "Authorization callback URL", if you just want to test your local app, put in: ',(0,i.kt)("inlineCode",{parentName:"li"},"http://localhost:3000/auth/login/github")),(0,i.kt)("li",{parentName:"ul"},"Once you know on which URL your API server will be deployed, you can create a new app with that URL instead.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"For example: ",(0,i.kt)("inlineCode",{parentName:"li"},"https://someotherhost.com/auth/login/github"))))),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},'Hit "Register application"'),(0,i.kt)("li",{parentName:"ol"},"Copy your Client ID and Client secret, and expose them as environment variables named ",(0,i.kt)("inlineCode",{parentName:"li"},"GITHUB_CLIENT_ID")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"GITHUB_CLIENT_SECRET")," wherever your app is running")))}m.isMDXComponent=!0}}]);