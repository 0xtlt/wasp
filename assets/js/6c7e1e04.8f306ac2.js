"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[4872],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},49503:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));n(44996);const i={id:"03-adding-operations",title:"Adding operations"},o=void 0,s={unversionedId:"tutorials/dev-excuses-app/03-adding-operations",id:"tutorials/dev-excuses-app/03-adding-operations",title:"Adding operations",description:"Now you'll need to create two files: actions.js and queries.js in the ext folder.",source:"@site/docs/tutorials/dev-excuses-app/03-adding-operations.md",sourceDirName:"tutorials/dev-excuses-app",slug:"/tutorials/dev-excuses-app/03-adding-operations",permalink:"/docs/tutorials/dev-excuses-app/03-adding-operations",draft:!1,editUrl:"https://github.com/wasp-lang/wasp/edit/main/web/docs/tutorials/dev-excuses-app/03-adding-operations.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"03-adding-operations",title:"Adding operations"},sidebar:"docs",previous:{title:"Modifying main.wasp file",permalink:"/docs/tutorials/dev-excuses-app/02-modifying-main-wasp-file"},next:{title:"Updating MainPage.js file",permalink:"/docs/tutorials/dev-excuses-app/04-updating-main-page-js-file"}},c={},l=[],p={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Now you'll need to create two files: ",(0,a.kt)("inlineCode",{parentName:"p"},"actions.js")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"queries.js")," in the ",(0,a.kt)("inlineCode",{parentName:"p"},"ext")," folder."),(0,a.kt)("p",null,"Let\u2019s add ",(0,a.kt)("inlineCode",{parentName:"p"},"saveExcuse()")," action to our ",(0,a.kt)("inlineCode",{parentName:"p"},"actions.js")," file. This action will save the text of our excuse to the database. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title=".../ext/actions.js | Defining an action"',title:'".../ext/actions.js',"|":!0,Defining:!0,an:!0,'action"':!0},"export const saveExcuse = async (excuse, context) => {\n  return context.entities.Excuse.create({\n    data: { text: excuse.text }\n  })\n}\n")),(0,a.kt)("p",null,"Then we need to create two queries in the ",(0,a.kt)("inlineCode",{parentName:"p"},"queries.js")," file. First, one ",(0,a.kt)("inlineCode",{parentName:"p"},"getExcuse")," will call an external API and fetch a new excuse. The second one, named ",(0,a.kt)("inlineCode",{parentName:"p"},"getAllSavedExcuses"),", will pull all the excuses we\u2019ve saved to our database. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title=".../ext/queries.js | Defining queries"',title:'".../ext/queries.js',"|":!0,Defining:!0,'queries"':!0},"import axios from 'axios';\n\nexport const getExcuse = async () => {\n  const response = await axios.get('https://api.devexcus.es/')\n  return response.data\n}\n\nexport const getAllSavedExcuses = async (_args, context) => {\n  return context.entities.Excuse.findMany()\n}\n")),(0,a.kt)("p",null,"That\u2019s it! We finished our back-end. \ud83c\udf89 Now, let\u2019s use those queries/actions on our UI."))}u.isMDXComponent=!0}}]);