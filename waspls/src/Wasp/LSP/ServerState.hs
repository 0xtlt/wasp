{-# LANGUAGE TemplateHaskell #-}

module Wasp.LSP.ServerState
  ( ServerState (..),
    diagnostics,
  )
where

import Control.Lens (makeClassy)
import Data.Default (Default (def))
import Data.Map (Map)
import qualified Data.Map as Map
import Data.Text (Text)
import qualified Data.Text as Text
import qualified Language.LSP.Types as LSP
import qualified Wasp.Analyzer.Type

-- | LSP State preserved between handlers
--
-- Recommended to use the lenses for accessing the fields.
data ServerState = ServerState
  { -- | List of diagnostics generated by waspc after the last file change
    _diagnostics :: [LSP.Diagnostic],
  }

makeClassy 'ServerState

instance Default ServerState where
  def = ServerState {_diagnostics = []}
