{-# LANGUAGE TemplateHaskell #-}

module Wasp.LSP.ServerState
  ( ServerState (..),
    sourceString,
    diagnostics,
    cst,
  )
where

import Control.Lens (makeClassy)
import Data.Default (Default (def))
import qualified Language.LSP.Types as LSP
import Wasp.Backend.ConcreteSyntax (SyntaxNode)

-- | LSP State preserved between handlers
--
-- Recommended to use the lenses for accessing the fields.
data ServerState = ServerState
  { -- | Source text for wasp file
    _sourceString :: String,
    -- | List of diagnostics generated by waspc after the last file change
    _diagnostics :: [LSP.Diagnostic],
    _cst :: Maybe [SyntaxNode]
  }

makeClassy 'ServerState

instance Default ServerState where
  def =
    ServerState
      { _sourceString = "",
        _diagnostics = [],
        _cst = Nothing
      }
